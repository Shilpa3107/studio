// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Ad copy generator flow.
 *
 * - generateCopyVariations - A function that generates multiple ad copy variations based on a campaign brief.
 * - GenerateCopyVariationsInput - The input type for the generateCopyVariations function.
 * - GenerateCopyVariationsOutput - The return type for the generateCopyVariations function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateCopyVariationsInputSchema = z.object({
  productDescription: z
    .string()
    .describe('A description of the product or service.'),
  targetAudience: z
    .string()
    .describe('The target audience for the advertising campaign.'),
  campaignGoals: z.string().describe('The goals of the advertising campaign.'),
  numberOfVariations: z
    .number()
    .default(3)
    .describe('The number of copy variations to generate.'),
});
export type GenerateCopyVariationsInput = z.infer<
  typeof GenerateCopyVariationsInputSchema
>;

const GenerateCopyVariationsOutputSchema = z.object({
  titles: z.array(z.string()).describe('Generated titles for the ad campaign.'),
  taglines: z.array(z.string()).describe('Generated taglines for the ad campaign.'),
  adCopy: z.array(z.string()).describe('Generated ad copy variations.'),
});
export type GenerateCopyVariationsOutput = z.infer<
  typeof GenerateCopyVariationsOutputSchema
>;

export async function generateCopyVariations(
  input: GenerateCopyVariationsInput
): Promise<GenerateCopyVariationsOutput> {
  return generateCopyVariationsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateCopyVariationsPrompt',
  input: {schema: GenerateCopyVariationsInputSchema},
  output: {schema: GenerateCopyVariationsOutputSchema},
  prompt: `You are an expert marketing copywriter. Generate multiple variations of ad copy elements based on the provided campaign brief.

Product Description: {{{productDescription}}}
Target Audience: {{{targetAudience}}}
Campaign Goals: {{{campaignGoals}}}

Generate {{{numberOfVariations}}} variations for each of the following:

*   Titles
*   Taglines
*   Ad Copy`,
});

const generateCopyVariationsFlow = ai.defineFlow(
  {
    name: 'generateCopyVariationsFlow',
    inputSchema: GenerateCopyVariationsInputSchema,
    outputSchema: GenerateCopyVariationsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
